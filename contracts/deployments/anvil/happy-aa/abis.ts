// This file is auto-generated by `make deploy` in `contracts/Makefile`
import type { MapTuple, ObjectFromTuples, UnionToTuple } from "@happy.tech/common"
import type { Address } from "viem"


const contractToAbi = ({
  "HappyEntryPoint": [
    {
      "type": "function",
      "name": "nonceValues",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "nonceTrack",
          "type": "uint192",
          "internalType": "uint192"
        }
      ],
      "outputs": [
        {
          "name": "nonceValue",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submit",
      "inputs": [
        {
          "name": "encodedHappyTx",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "output",
          "type": "tuple",
          "internalType": "struct SubmitOutput",
          "components": [
            {
              "name": "gas",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "executeGas",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "validationStatus",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "callStatus",
              "type": "uint8",
              "internalType": "enum CallStatus"
            },
            {
              "name": "revertData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "payoutStatus",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "CallReverted",
      "inputs": [
        {
          "name": "revertData",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutionReverted",
      "inputs": [
        {
          "name": "revertData",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "GasPriceTooHigh",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNonce",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MalformedHappyTx",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PaymentFailed",
      "inputs": [
        {
          "name": "result",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "PaymentReverted",
      "inputs": [
        {
          "name": "revertData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ValidationFailed",
      "inputs": [
        {
          "name": "reason",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "ValidationReverted",
      "inputs": [
        {
          "name": "revertData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    }
  ],
  "ScrappyAccount": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_entrypoint",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "ENTRYPOINT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addExtension",
      "inputs": [
        {
          "name": "extension",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "extensionType",
          "type": "uint8",
          "internalType": "enum ExtensionType"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "happyTx",
          "type": "tuple",
          "internalType": "struct HappyTx",
          "components": [
            {
              "name": "account",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "gasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "executeGasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "dest",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymaster",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nonceTrack",
              "type": "uint192",
              "internalType": "uint192"
            },
            {
              "name": "nonceValue",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "maxFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "submitterFee",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "paymasterData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "validatorData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "extraData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "output",
          "type": "tuple",
          "internalType": "struct ExecutionOutput",
          "components": [
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum CallStatus"
            },
            {
              "name": "gas",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "revertData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "executeCall",
      "inputs": [
        {
          "name": "info",
          "type": "tuple",
          "internalType": "struct CallInfo",
          "components": [
            {
              "name": "dest",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "success",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "returnData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "extensions",
      "inputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum ExtensionType"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isExtensionRegistered",
      "inputs": [
        {
          "name": "extension",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "extensionType",
          "type": "uint8",
          "internalType": "enum ExtensionType"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidSignature",
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "payout",
      "inputs": [
        {
          "name": "happyTx",
          "type": "tuple",
          "internalType": "struct HappyTx",
          "components": [
            {
              "name": "account",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "gasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "executeGasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "dest",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymaster",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nonceTrack",
              "type": "uint192",
              "internalType": "uint192"
            },
            {
              "name": "nonceValue",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "maxFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "submitterFee",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "paymasterData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "validatorData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "extraData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "consumedGas",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeExtension",
      "inputs": [
        {
          "name": "extension",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "extensionType",
          "type": "uint8",
          "internalType": "enum ExtensionType"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "validate",
      "inputs": [
        {
          "name": "happyTx",
          "type": "tuple",
          "internalType": "struct HappyTx",
          "components": [
            {
              "name": "account",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "gasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "executeGasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "dest",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymaster",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nonceTrack",
              "type": "uint192",
              "internalType": "uint192"
            },
            {
              "name": "nonceValue",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "maxFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "submitterFee",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "paymasterData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "validatorData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "extraData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ExtensionAdded",
      "inputs": [
        {
          "name": "extension",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "extensionType",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum ExtensionType"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExtensionRemoved",
      "inputs": [
        {
          "name": "extension",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "extensionType",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum ExtensionType"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Received",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967NonPayable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExtensionAlreadyRegistered",
      "inputs": [
        {
          "name": "extension",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "extensionType",
          "type": "uint8",
          "internalType": "enum ExtensionType"
        }
      ]
    },
    {
      "type": "error",
      "name": "ExtensionNotRegistered",
      "inputs": [
        {
          "name": "extension",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "extensionType",
          "type": "uint8",
          "internalType": "enum ExtensionType"
        }
      ]
    },
    {
      "type": "error",
      "name": "FailedCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotFromEntryPoint",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotSelfOrOwner",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UUPSUnauthorizedCallContext",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        {
          "name": "slot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    }
  ],
  "ScrappyAccountFactory": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "accountImplementation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ACCOUNT_IMPLEMENTATION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "createAccount",
      "inputs": [
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getAddress",
      "inputs": [
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "error",
      "name": "AlreadyDeployed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InitializeError",
      "inputs": []
    }
  ],
  "ScrappyPaymaster": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "entryPoint",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "submitterTipPerByte",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "ENTRYPOINT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SUBMITTER_TIP_PER_BYTE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "payout",
      "inputs": [
        {
          "name": "happyTx",
          "type": "tuple",
          "internalType": "struct HappyTx",
          "components": [
            {
              "name": "account",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "gasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "executeGasLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "dest",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymaster",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nonceTrack",
              "type": "uint192",
              "internalType": "uint192"
            },
            {
              "name": "nonceValue",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "maxFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "submitterFee",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "paymasterData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "validatorData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "extraData",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "consumedGas",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Received",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "NotFromEntryPoint",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    }
  ]
}
) as const

const aliasToContract = ({
  "HappyEntryPoint": "HappyEntryPoint",
  "ScrappyAccount": "ScrappyAccount",
  "ScrappyAccountFactory": "ScrappyAccountFactory",
  "ScrappyPaymaster": "ScrappyPaymaster"
}) as const

export const deployment = ({
  "HappyEntryPoint": "0x8B875dd38a222737183a165519dcd52768d8b99f",
  "ScrappyAccount": "0x95d8b82a439Df73d29DC84DcB347083a66244650",
  "ScrappyAccountFactory": "0x264F1B27861402B1bC55199b23B7cB4B71022025",
  "ScrappyPaymaster": "0x7f26e5DE61003caB1d154CE63202cD7B387B76E7"
}) as const

export type ContractToAbi = typeof contractToAbi
export type AliasToContract = typeof aliasToContract
export type ContractName = keyof ContractToAbi
export type ContractAlias = keyof AliasToContract
export type Deployment = Record<ContractAlias, Address>

type AliasTuple = UnionToTuple<ContractAlias>
type AbiValuesTuple = MapTuple<MapTuple<AliasTuple, AliasToContract>, ContractToAbi>

export type StaticAbis = ObjectFromTuples<AliasTuple, AbiValuesTuple>

export const abis = {} as StaticAbis

for (const [alias, contractName] of Object.entries(aliasToContract)) {
    // biome-ignore lint/suspicious/noExplicitAny: safe generated code
    abis[alias as ContractAlias] = contractToAbi[contractName as ContractName] as any
}


