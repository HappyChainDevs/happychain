// This file is auto-generated by `make deploy` in `contracts/Makefile`
import type { MapTuple, ObjectFromTuples, UnionToTuple } from "@happy.tech/common"
import type { Address } from "viem"


const contractToAbi = ({
  "HappyCounter": null,
  "MockERC20": null,
  "MockGasBurner": null,
  "MockRevert": null
}
) as const

const aliasToContract = ({
  "HappyCounter": "HappyCounter",
  "MockGasBurner": "MockGasBurner",
  "MockRevert": "MockRevert",
  "MockTokenA": "MockERC20",
  "MockTokenB": "MockERC20",
  "MockTokenC": "MockERC20"
}) as const

export const deployment = ({
  "HappyCounter": "0x8D45cAd49F37CC512DAFFE6700ddc98084867E68",
  "MockGasBurner": "0xdA504Bb1b736b04A5Aec28fD5d693Ad7447Ad438",
  "MockRevert": "0x4065fA94A420c30c9bBc32483e65CaC8edDDa855",
  "MockTokenA": "0x6C2A2f0B573bb660F5548E4B549b595ff478F441",
  "MockTokenB": "0x0C25f86894C1a24160Cf7e96460F58CF9Ad79e01",
  "MockTokenC": "0x2A8eb32069E47cC908F403194B5aaBC71d87c858"
}) as const

export type ContractToAbi = typeof contractToAbi
export type AliasToContract = typeof aliasToContract
export type ContractName = keyof ContractToAbi
export type ContractAlias = keyof AliasToContract
export type Deployment = Record<ContractAlias, Address>

type AliasTuple = UnionToTuple<ContractAlias>
type AbiValuesTuple = MapTuple<MapTuple<AliasTuple, AliasToContract>, ContractToAbi>

export type StaticAbis = ObjectFromTuples<AliasTuple, AbiValuesTuple>

export const abis = {} as StaticAbis

for (const [alias, contractName] of Object.entries(aliasToContract)) {
    // biome-ignore lint/suspicious/noExplicitAny: safe generated code
    abis[alias as ContractAlias] = contractToAbi[contractName as ContractName] as any
}


