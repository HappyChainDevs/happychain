// This file is auto-generated by `make deploy` in `package/contracts/Makefile`
import type { MapTuple, ObjectFromTuples, UnionToTuple } from "@happychain/common"

const contractToAbi = {
    Counter: [
        {
            type: "function",
            name: "increment",
            inputs: [],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "number",
            inputs: [],
            outputs: [
                {
                    name: "",
                    type: "uint256",
                    internalType: "uint256",
                },
            ],
            stateMutability: "view",
        },
        {
            type: "function",
            name: "setNumber",
            inputs: [
                {
                    name: "newNumber",
                    type: "uint256",
                    internalType: "uint256",
                },
            ],
            outputs: [],
            stateMutability: "nonpayable",
        },
    ],
} as const

const aliasToContract = {
    Counter: "Counter",
} as const

export const deployment = {
    Counter: "0xea7a81bacbac93afdc603902fe64ea3d361ba326",
} as const

export type ContractToAbi = typeof contractToAbi
export type AliasToContract = typeof aliasToContract
export type ContractName = keyof ContractToAbi
export type ContractAlias = keyof AliasToContract

type AliasTuple = UnionToTuple<ContractAlias>
type AbiValuesTuple = MapTuple<MapTuple<AliasTuple, AliasToContract>, ContractToAbi>

export type StaticAbis = ObjectFromTuples<AliasTuple, AbiValuesTuple>

export const abis = {} as StaticAbis

for (const [alias, contractName] of Object.entries(aliasToContract)) {
    // biome-ignore lint/suspicious/noExplicitAny: safe generated code
    abis[alias as ContractAlias] = contractToAbi[contractName as ContractName] as any
}
