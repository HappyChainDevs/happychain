# TODO revisit top comment
########################################################################################################################
### HAPPYCHAIN MONOREPO ENVIRONMENT VARIABLES ##########################################################################
########################################################################################################################
#
# Within this file, any variable that is prefixed with "HAPPY_" _MAY_ be exposed to the front end code,
# and therefore could be made public. Ensure that any truly secret variables are not prefixed with "HAPPY_"
#
# You can populate some of the values in this file via the the `make select-*` commands in the top-level Makefile.
# This will append overrides at the end of the files, so it won't destroy the values you configured here, just shadow
# them.
#
# The default values in .env.example reference the HappyChain Sepolia blockchain and all services running in production.

########################################################################################################################
### SHARED CONFIG

# For packages built or run with Node.js or Bun.
# Valid values: "production", "development", "test", "staging"
# TODO: explain what this controls, and find a better system for this
NODE_ENV=development

# The logging level ot use.
# Valid values: "TRACE", "INFO", "WARN", "ERROR", "OFF"
# Each level in the list cover the logs generated at the levels after it in the list.
HAPPY_LOG_LEVEL=INFO

# In development, this controls which hosts are allowed to access running services.
# Right now this is only used to do mobile device testing, allowing a proxy server to access a locally hosted service.
# TODO: what does "in development" even mean?
# TODO: a proxy server? is this correct?
ALLOWED_SERVER_HOSTS=

# ID of the blockchain to connect to.
# Supported values are: 216 (HappyChain Sepolia) and 31337 (local Anvil devnet).
# TODO: consolidate
CHAIN_ID=216
HAPPY_CHAIN_ID=$(CHAIN_ID)

# TODO this is the ideal â€” make it so
# These two variables let you configure an HTTP or WebSocket RPC URL.
# Some services will require that at least one of those two are set.
# TODO: ^ is that true? is that what we want?
# If both are set, then services will default to a WebSocket transport and use HTTP as a fallback.
HAPPY_RPC_HTTP_URL=https://rpc.testnet.happy.tech
HAPPY_RPC_WS_URL=wss://rpc.testnet.happy.tech/ws

# The URL at which the Happy Wallet is served.
# This is used to load the embedded Happy Wallet iframe.
HAPPY_IFRAME_URL=https://iframe.happy.tech

# The URL at which the Boop submitter can be accessed.
HAPPY_SUBMITTER_URL=https://submitter.happy.tech

# The URL at which the $HAPPY faucet can be accessed.
HAPPY_FAUCET_URL=https://faucet.testnet.happy.tech

# Whenever HAPPY_CHAIN_ID == 216 (HappyChain Sepolia) whether to use the staging contracts or the produciton contracts.
# TODO needs HAPPY_USE_STAGING_CONTRACTS
USE_STAGING_CONTRACTS=false

### TODO values from commit: clean up

# TODO: consolidate
# some services can be configured to use http or ws
RPC_URL=https://rpc.testnet.happy.tech
HAPPY_RPC_URL=$(RPC_URL)
# some services require explicit http or ws
HAPPY_RPC_HTTP_URL=https://rpc.testnet.happy.tech
HAPPY_RPC_WS_URL=wss://rpc.testnet.happy.tech/ws

# TODO: these are the old values, remove
HAPPY_IFRAME_URL=http://localhost:5160
HAPPY_SUBMITTER_URL=https://submitter.happy.tech
# TODO rename HAPPY_FAUCET_URL, make the /faucet not part of this
HAPPY_FAUCET_ENDPOINT=https://faucet.testnet.happy.tech/faucet
# TODO: not used, but it would be great if it was!
HAPPY_API_SPEC_URL="${HAPPY_SUBMITTER_URL}/docs/openapi.json"

########################################################################################################################
# SERVICE PORTS

# TODO use those in other vars? explain more that these are local?

# Note: when we specify "local port", we mean that this service is not only meant to be accessed
# locally, and whenever this service is not accessed locally, the HappyChain staging or prod
# nginx config will map a domain name to the local port, so it won't be observable externally.

# Port to which the local Anvil devnet will be bound.
ANVIL_PORT=8545

# Local port to which the Happy Wallet iframe server will be bound.
IFRAME_PORT=5160

# Local port to which the $HAPPY faucet server will be bound.
FAUCET_PORT=4444

# Local port to which the Boop submitter will be bound.
SUBMITTER_PORT=3001

# Local port to which the Vanilla JS demo will be bound.
DEMO_JS_PORT=6001

# Local port to which the React demo will be bound.
DEMO_REACT_PORT=6002

# Local port to which the Vue demo will be bound.
DEMO_VUE_PORT=6003

# Port to which the local contracts docs site will be bound.
# Note that we do not serve this publicly.
# TODO: rename to CONTRACT_DOCS_PORT
DOCS_PORT=4000

########################################################################################################################
# HAPPY WALLET (IFRAME) CONFIG

# Firebase config, values can be acquired from "Project Settings" in the Firebase console.
# Default values are for the prod environment.
# Safe to publicize, this gets bundled in the client code served by the wallet.
HAPPY_FIREBASE_API_KEY="AIzaSyC63JTgST12DhmWG5xz3bhgKkpXALdcfhQ"
HAPPY_FIREBASE_AUTH_DOMAIN="happytech-1c86e.firebaseapp.com"
HAPPY_FIREBASE_PROJECT_ID="happytech-1c86e"
HAPPY_FIREBASE_STORAGE_BUCKET="happytech-1c86e.appspot.com"
HAPPY_FIREBASE_MESSAGE_SENDER_ID="1:903671289585:web:0c597b1836b0bfa8e17b50"
HAPPY_FIREBASE_APP_ID="1:903671289585:web:0c597b1836b0bfa8e17b50"

# Web3Auth Config, values can be acquired from the dashboard:
# Projects > Custom Authentication > Create Verifier using Firebase JWT
# Default values are for the prod environment.
# Safe to publicize, this gets bundled in the client code served by the wallet.
VITE_WEB3AUTH_CLIENT_ID="BAhlcPh6j9gJ3y1OclMfpEzvksJ-Vgq6YYIVYvn0SOkudbCyG4IXxRpuQer0WkDpr3MHITkOJtKfoBysLvfCDqc"
VITE_WEB3AUTH_NETWORK="sapphire_devnet"
VITE_WEB3AUTH_VERIFIER="firebase-1"

########################################################################################################################
# TRANSACTION MANAGER (TXM) CONFIG

# TODO is this used?
TXM_DB_PATH=txm.sqlite

########################################################################################################################
# BOOP SUBMITTER CONFIG

# Path to the submitter database file.
SUBMITTER_DB_PATH=submitter.sqlite

# When running tests and spinning a new local devnet, whether to run that chain with
# automined (blocks mined as soon as a transaction is received) or the usual block time (2s).
AUTOMINE_TESTS=false

# The private key used to deploy Boop accounts. (PRIVATE)
PRIVATE_KEY_ACCOUNT_DEPLOYER=

# A comma-separate list of private keys, used to submit boops. (PRIVATE)
EXECUTOR_KEYS=

########################################################################################################################
# $HAPPY FAUCET SERVICE CONFIG

# Path to the Faucet's own database file.
FAUCET_DB_PATH=faucet.sqlite

# TODO is this used?
# Path for the TXM database file used by the faucet service.
TXM_DB_PATH=txm.sqlite

# Minimum amount of time in seconds between faucet request for an account.
FAUCET_RATE_LIMIT_WINDOW_SECONDS=3600 # 1 hour

# Amount of tokens in Wei to send in response of each legal faucet request.
TOKEN_AMOUNT=100000000000000000 # 0.1 HAPPY

# Private key used to send tokens (PRIVATE).
FAUCET_PRIVATE_KEY=

# TODO remove & rename (cf. above)
PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

# CloudFlare Turnstile secret (PRIVATE).
TURNSTILE_SECRET=

# CloudFlare Turnstile site key.
# NOTE: This doesn't get used in the faucet but in places that use the faucet (right now, the wallet (iframe)).
# Default value is for prod & staging.
# Safe to publicize, this gets bundled in the client code served by the wallet.
HAPPY_TURNSTILE_SITEKEY=0x4AAAAAABRnNdBbR6oFMviC

########################################################################################################################
# RANDOMNESS SERVICE CONFIG

# Path for the randomness service's own database file.
RANDOMNESS_DB_PATH=random.sqlite

# Path for the TXM database file used by the randomness service.
# TODO rename to RANDOMNESS_TXM_DB_PATH
TXM_DB_PATH=txm.sqlite

# Private key used to send tokens.
RANDOMNESS_PRIVATE_KEY=

# TODO remove & rename (cf. above)
PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

# TODO rename to DRAND

# The API endpoint for the Drand network.
# Note that only Drand networks that use BLS-on-BN254 are supported, as our contracts can only verify such signatures
# (which can be verified more efficiently via EVM precompiles).
# See https://docs.anyrand.com/technical-resources/bls-on-evm for more information.
EVM_DRAND_URL=https://api.drand.sh/v2/beacons/evmnet

# The Drand network genesis time.
EVM_DRAND_GENESIS_TIMESTAMP_SECONDS=1727521075

# The period of the Drand network in use (one random value generated every period), in seconds.
EVM_DRAND_PERIOD_SECONDS=3

# The timestamp of the EVM blockchain to use (default value is HappyChain Sepolia).
# TODO is this up to date with the latest testnet?
HAPPYCHAIN_GENESIS_TIMESTAMP_SECONDS=1723165536

# TODO
EVM_DRAND_MARGIN=10

# TODO
POST_COMMIT_MARGIN=10

# TODO
PRECOMMIT_DELAY=10

# TODO
PRECOMMIT_DELAY_BLOCKS=21600

########################################################################################################################
# RANDOMNESS MONITORING SERVICE CONFIG

# Path to the randomness monitoring service database file.
MONITORING_DB_PATH=monitoring.sqlite

########################################################################################################################
# BOOP SDK CONFIG

# The default EntryPoint contract address to use if not specified by the user (optional).
ENTRYPOINT=

########################################################################################################################